CMAKE_MINIMUM_REQUIRED(VERSION 3.4.1)

PROJECT(vsense_ar)

SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../../../cmake;${CMAKE_MODULE_PATH}")
INCLUDE(SetVariables)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall")

SET(VSENSE_LIBS_DIR ${CMAKE_SOURCE_DIR}/../../../../vsense-libs/lib)

SET(VSENSE_INCLUDE_DIR ${VSENSE_LIBS_DIR}/../include)

INCLUDE_DIRECTORIES(${glm_INCLUDE_DIR})

FIND_PACKAGE(Tango REQUIRED)

ADD_LIBRARY(lib_vsense_color STATIC IMPORTED)
SET_TARGET_PROPERTIES(lib_vsense_color PROPERTIES IMPORTED_LOCATION
    ${VSENSE_LIBS_DIR}/color/${ANDROID_ABI}/libvsense_color.a)

ADD_LIBRARY(lib_vsense_depth STATIC IMPORTED)
SET_TARGET_PROPERTIES(lib_vsense_depth PROPERTIES IMPORTED_LOCATION
    ${VSENSE_LIBS_DIR}/depth/${ANDROID_ABI}/libvsense_depth.a)

ADD_LIBRARY(lib_vsense_em STATIC IMPORTED)
SET_TARGET_PROPERTIES(lib_vsense_em PROPERTIES IMPORTED_LOCATION
    ${VSENSE_LIBS_DIR}/em/${ANDROID_ABI}/libvsense_em.a)

ADD_LIBRARY(lib_vsense_gl STATIC IMPORTED)
SET_TARGET_PROPERTIES(lib_vsense_gl PROPERTIES IMPORTED_LOCATION
    ${VSENSE_LIBS_DIR}/gl/${ANDROID_ABI}/libvsense_gl.a)

ADD_LIBRARY(lib_vsense_io STATIC IMPORTED)
SET_TARGET_PROPERTIES(lib_vsense_io PROPERTIES IMPORTED_LOCATION
    ${VSENSE_LIBS_DIR}/io/${ANDROID_ABI}/libvsense_io.a)

ADD_LIBRARY(lib_vsense_pc STATIC IMPORTED)
SET_TARGET_PROPERTIES(lib_vsense_pc PROPERTIES IMPORTED_LOCATION
    ${VSENSE_LIBS_DIR}/pc/${ANDROID_ABI}/libvsense_pc.a)

ADD_LIBRARY(lib_vsense_sh STATIC IMPORTED)
SET_TARGET_PROPERTIES(lib_vsense_sh PROPERTIES IMPORTED_LOCATION
    ${VSENSE_LIBS_DIR}/sh/${ANDROID_ABI}/libvsense_sh.a)

FILE(GLOB SRC_FILES *.cpp)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRC_FILES})

SET(VERSION_GLSL "310 es")
SET(PRECISION "precision mediump float;")
FILE(GLOB SHADER_FILES ${VSENSE_LIBS_DIR}/../../assets/shaders/*.in)
FOREACH(SHADER_FILE ${SHADER_FILES})
	GET_FILENAME_COMPONENT(OUTPUT_FILE ${SHADER_FILE} NAME)	
	STRING(REGEX REPLACE "\\.in" "" OUTPUT_FILE ${OUTPUT_FILE})
	CONFIGURE_FILE(${SHADER_FILE} "${CMAKE_CURRENT_SOURCE_DIR}/../assets/shaders/${OUTPUT_FILE}")
ENDFOREACH()

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE ${VSENSE_INCLUDE_DIR})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE ${Tango_INCLUDE_DIRS})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${Tango_LIBRARIES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} log)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} GLESv3)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} android)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} lib_vsense_depth)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} lib_vsense_gl)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} lib_vsense_io)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} lib_vsense_pc)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} lib_vsense_color)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} lib_vsense_em)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} lib_vsense_sh)
