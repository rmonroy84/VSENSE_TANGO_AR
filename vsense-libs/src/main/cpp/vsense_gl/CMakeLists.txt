PROJECT(vsense_gl)

IF(MSVC)
	SET(CMAKE_AUTOMOC ON)
	SET(CMAKE_AUTORCC ON)

	FIND_PACKAGE(Qt5Widgets REQUIRED)
	SET(BIN_FOLDERS "${_qt5Widgets_install_prefix}/bin;${BIN_FOLDERS}")
	
	SET(VERSION_GLSL "430")
	SET(PRECISION "")
	FILE(GLOB SHADER_FILES ${VSENSE_INCLUDE_DIR}/../../assets/shaders/*.in)
	FOREACH(SHADER_FILE ${SHADER_FILES})
		GET_FILENAME_COMPONENT(OUTPUT_FILE ${SHADER_FILE} NAME)	
		STRING(REGEX REPLACE "\\.in" "" OUTPUT_FILE ${OUTPUT_FILE})
		CONFIGURE_FILE(${SHADER_FILE} "${CMAKE_CURRENT_SOURCE_DIR}/resources/shaders/${OUTPUT_FILE}")
	ENDFOREACH()	

	SET(RCC_FILES vsense_gl.qrc)

	FILE(GLOB INC_FILES ${VSENSE_INCLUDE_DIR}/vsense/gl/*.h)
ELSEIF(ANDROID)
    FIND_PACKAGE(Tango REQUIRED)
    
    INCLUDE_DIRECTORIES(${Tango_INCLUDE_DIRS})
ENDIF()

FILE(GLOB MSVC_FILES1 vsense/gl/GLViewer.*)
FILE(GLOB MSVC_FILES2 vsense/gl/ImageObject.*)

FILE(GLOB SRC_FILES vsense/gl/*.cpp)

IF(MSVC)
	FILE(GLOB SRC_OVERLAY_FILES vsense/gl/*Overlay.cpp)
	LIST(REMOVE_ITEM SRC_FILES ${SRC_OVERLAY_FILES})

	FILE(GLOB INC_OVERLAY_FILES ${VSENSE_INCLUDE_DIR}/vsense/gl/*Overlay.h)
	LIST(REMOVE_ITEM INC_FILES ${INC_OVERLAY_FILES})
ELSEIF(ANDROID)
	LIST(REMOVE_ITEM SRC_FILES ${MSVC_FILES1})	
	LIST(REMOVE_ITEM SRC_FILES ${MSVC_FILES2})	
ENDIF()

ADD_LIBRARY(${PROJECT_NAME} STATIC ${SRC_FILES} ${INC_FILES} ${RCC_FILES})

IF(MSVC)
	qt5_use_modules(${PROJECT_NAME} Core OpenGL Widgets)
ELSEIF(ANDROID)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${Tango_LIBRARIES})
	
	SET_TARGET_PROPERTIES(${PROJECT_NAME}
                    PROPERTIES
                    ARCHIVE_OUTPUT_DIRECTORY
                    "${VSENSE_INCLUDE_DIR}/../lib/gl/${ANDROID_ABI}")
ENDIF()